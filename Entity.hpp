/** @file Entity.hpp
 * @brief Заголовочный файл для абстрактного базового класса Entity, представляющего игровые сущности.
 * @author H0ly
 */

#ifndef ENTITY_HORIZON /**< Проверяет, не был ли файл уже включён, чтобы избежать повторного включения. */
#define ENTITY_HORIZON /**< Определяет макрос ENTITY_HORIZON для защиты от повторного включения. */

class Level; /**< Предварительное объявление класса Level для избежания циклической зависимости. */

/** @brief Абстрактный базовый класс Entity для игровых сущностей, таких как игрок и враги.
 * @author H0ly
 */
class Entity { /**< Объявляет класс Entity. */
public: /**< Начинает секцию публичных методов и членов класса. */
    virtual ~Entity() = default; /**< Виртуальный деструктор для корректного удаления производных классов. */
    virtual float getX() const = 0; /**< Чисто виртуальная функция для получения X-координаты сущности. */
    virtual float getY() const = 0; /**< Чисто виртуальная функция для получения Y-координаты сущности. */
    virtual char getSymbol() const = 0; /**< Чисто виртуальная функция для получения символа сущности. */
    virtual void update(Level& level, float deltaTime) = 0; /**< Чисто виртуальная функция для обновления состояния сущности. */
}; /**< Завершает определение класса Entity. */

#endif /**< Завершает защиту от повторного включения файла. */
#endif